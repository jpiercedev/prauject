{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan/Desktop/PortfolioFolder/project-status-dashboard/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProjectForm from './components/ProjectForm';\nimport ProjectList from './components/ProjectList';\nimport Sidebar from './components/Sidebar';\n\n// Project Object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [currentProject, setCurrentProject] = useState(null);\n  const [editingIndex, setEditingIndex] = useState(null);\n  const [name, setName] = useState('Taylor');\n  useEffect(() => {\n    const savedProjects = localStorage.getItem('projects');\n    if (savedProjects) {\n      setProjects(JSON.parse(savedProjects));\n    }\n  }, []);\n\n  // Check if username exists\n  useEffect(() => {\n    const name = localStorage.getItem('name');\n    if (name) {\n      setName(name);\n    }\n  });\n  const saveProjectsToLocalStorage = updatedProjects => {\n    setProjects(updatedProjects);\n    localStorage.setItem('projects', JSON.stringify(updatedProjects));\n  };\n  const addProject = newProject => {\n    if (editingIndex !== null) {\n      const updatedProjects = [...projects];\n      updatedProjects[editingIndex] = newProject;\n      saveProjectsToLocalStorage(updatedProjects);\n      setEditingIndex(null);\n      setCurrentProject(null);\n    } else {\n      const updatedProjects = [...projects, newProject];\n      saveProjectsToLocalStorage(updatedProjects);\n    }\n  };\n  const editProject = index => {\n    setCurrentProject(projects[index]); // Open sidebar with project\n    setEditingIndex(index);\n  };\n  const deleteProject = index => {\n    const updatedProjects = projects.filter((_, i) => i !== index);\n    saveProjectsToLocalStorage(updatedProjects);\n  };\n  const closeSidebar = () => {\n    setCurrentProject(null); // Close the sidebar\n  };\n  const saveEditedProject = updatedProject => {\n    if (editingIndex !== null) {\n      const updatedProjects = [...projects];\n      updatedProjects[editingIndex] = updatedProject;\n      saveProjectsToLocalStorage(updatedProjects);\n      closeSidebar();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-stone-800 text-gray-100 min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-screen-sm mx-auto pt-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-serif text-white mb-6 mt-10 text-center\",\n        children: \"Good evening Jonathan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectForm, {\n        onAddProject: addProject,\n        project: currentProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n        projects: projects,\n        onEdit: editProject,\n        onDelete: deleteProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), currentProject && /*#__PURE__*/_jsxDEV(Sidebar, {\n        project: currentProject,\n        onClose: closeSidebar,\n        onSave: saveEditedProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bSyOMH2rnfxlbgCMoefyCDJZjdE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ProjectForm","ProjectList","Sidebar","jsxDEV","_jsxDEV","App","_s","projects","setProjects","currentProject","setCurrentProject","editingIndex","setEditingIndex","name","setName","savedProjects","localStorage","getItem","JSON","parse","saveProjectsToLocalStorage","updatedProjects","setItem","stringify","addProject","newProject","editProject","index","deleteProject","filter","_","i","closeSidebar","saveEditedProject","updatedProject","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddProject","project","onEdit","onDelete","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/jonathan/Desktop/PortfolioFolder/project-status-dashboard/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProjectForm from './components/ProjectForm';\nimport ProjectList from './components/ProjectList';\nimport Sidebar from './components/Sidebar';\n\n// Project Object\ninterface Project {\n  title: string;\n  description: string;\n  status: 'In Progress' | 'Completed' | 'On Hold';\n}\n\nconst App = () => {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [currentProject, setCurrentProject] = useState<Project | null>(null);\n  const [editingIndex, setEditingIndex] = useState<number | null>(null);\n  const [name, setName] = useState('Taylor');\n  \n  useEffect(() => {\n    const savedProjects = localStorage.getItem('projects');\n    if (savedProjects) {\n      setProjects(JSON.parse(savedProjects));\n    }\n  }, []);\n\n  // Check if username exists\n  useEffect(() => {\n    const name = localStorage.getItem('name');\n    if (name) {\n      setName(name)\n    }\n  })\n\n  const saveProjectsToLocalStorage = (updatedProjects: Project[]) => {\n    setProjects(updatedProjects);\n    localStorage.setItem('projects', JSON.stringify(updatedProjects));\n  };\n\n  const addProject = (newProject: Project) => {\n    if (editingIndex !== null) {\n      const updatedProjects = [...projects];\n      updatedProjects[editingIndex] = newProject;\n      saveProjectsToLocalStorage(updatedProjects);\n      setEditingIndex(null);\n      setCurrentProject(null);\n    } else {\n      const updatedProjects = [...projects, newProject];\n      saveProjectsToLocalStorage(updatedProjects);\n    }\n  };\n\n  const editProject = (index: number) => {\n    setCurrentProject(projects[index]); // Open sidebar with project\n    setEditingIndex(index);\n  };\n\n  const deleteProject = (index: number) => {\n    const updatedProjects = projects.filter((_, i) => i !== index);\n    saveProjectsToLocalStorage(updatedProjects);\n  };\n\n  const closeSidebar = () => {\n    setCurrentProject(null); // Close the sidebar\n  };\n\n  const saveEditedProject = (updatedProject: Project) => {\n    if (editingIndex !== null) {\n      const updatedProjects = [...projects];\n      updatedProjects[editingIndex] = updatedProject;\n      saveProjectsToLocalStorage(updatedProjects);\n      closeSidebar();\n    }\n  };\n\n  return (\n    <div className=\"bg-stone-800 text-gray-100 min-h-screen\">\n        <div className=\"max-w-screen-sm mx-auto pt-20\">\n        <h1 className=\"text-4xl font-serif text-white mb-6 mt-10 text-center\">Good evening Jonathan</h1>\n          <ProjectForm onAddProject={addProject} project={currentProject} />\n          <ProjectList projects={projects} onEdit={editProject} onDelete={deleteProject} />\n          \n          {currentProject && (\n            <Sidebar\n              project={currentProject}\n              onClose={closeSidebar}\n              onSave={saveEditedProject}\n            />\n          )}\n        </div>\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}