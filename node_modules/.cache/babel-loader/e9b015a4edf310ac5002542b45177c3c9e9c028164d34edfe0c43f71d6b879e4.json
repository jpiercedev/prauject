{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan/Desktop/PortfolioFolder/project-status-dashboard/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProjectForm from './components/ProjectForm';\nimport ProjectList from './components/ProjectList';\nimport Sidebar from './components/Sidebar';\nimport Onboarding from './components/Onboarding';\n\n// Project Object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [currentProject, setCurrentProject] = useState(null);\n  const [editingIndex, setEditingIndex] = useState(null);\n  const [name, setName] = useState('');\n  useEffect(() => {\n    const savedProjects = localStorage.getItem('projects');\n    if (savedProjects) {\n      setProjects(JSON.parse(savedProjects));\n    }\n  }, []);\n\n  // Check if username exists\n  useEffect(() => {\n    const name = localStorage.getItem('name');\n    if (name) {\n      setName(name);\n    }\n  }, []);\n\n  // Username submission\n  const handleNameSubmit = name => {\n    setName(name);\n    // Save to localStorage\n    localStorage.setItem('name', name);\n  };\n  const saveProjectsToLocalStorage = updatedProjects => {\n    setProjects(updatedProjects);\n    localStorage.setItem('projects', JSON.stringify(updatedProjects));\n  };\n  const addProject = newProject => {\n    if (editingIndex !== null) {\n      const updatedProjects = [...projects];\n      updatedProjects[editingIndex] = newProject;\n      saveProjectsToLocalStorage(updatedProjects);\n      setEditingIndex(null);\n      setCurrentProject(null);\n    } else {\n      const updatedProjects = [...projects, newProject];\n      saveProjectsToLocalStorage(updatedProjects);\n    }\n  };\n  const editProject = index => {\n    setCurrentProject(projects[index]);\n    setEditingIndex(index);\n  };\n  const deleteProject = index => {\n    const updatedProjects = projects.filter((_, i) => i !== index);\n    saveProjectsToLocalStorage(updatedProjects);\n  };\n  const closeSidebar = () => {\n    setCurrentProject(null);\n  };\n  const saveEditedProject = updatedProject => {\n    if (editingIndex !== null) {\n      const updatedProjects = [...projects];\n      updatedProjects[editingIndex] = updatedProject;\n      saveProjectsToLocalStorage(updatedProjects);\n      closeSidebar();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-stone-800 text-gray-100 min-h-screen\",\n    children: !name ? /*#__PURE__*/_jsxDEV(Onboarding, {\n      onSubmit: handleNameSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-screen-sm mx-auto pt-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-serif text-white mb-6 mt-10 text-center\",\n        children: \"Good evening Jonathan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(ProjectForm, {\n        onAddProject: addProject,\n        project: currentProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n        projects: projects,\n        onEdit: editProject,\n        onDelete: deleteProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), currentProject && /*#__PURE__*/_jsxDEV(Sidebar, {\n        project: currentProject,\n        onClose: closeSidebar,\n        onSave: saveEditedProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hWCi/7kdJbTz5SSm6+wA3bfWK2k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ProjectForm","ProjectList","Sidebar","Onboarding","jsxDEV","_jsxDEV","App","_s","projects","setProjects","currentProject","setCurrentProject","editingIndex","setEditingIndex","name","setName","savedProjects","localStorage","getItem","JSON","parse","handleNameSubmit","setItem","saveProjectsToLocalStorage","updatedProjects","stringify","addProject","newProject","editProject","index","deleteProject","filter","_","i","closeSidebar","saveEditedProject","updatedProject","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onAddProject","project","onEdit","onDelete","onClose","onSave","_c","$RefreshReg$"],"sources":["/Users/jonathan/Desktop/PortfolioFolder/project-status-dashboard/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProjectForm from './components/ProjectForm';\nimport ProjectList from './components/ProjectList';\nimport Sidebar from './components/Sidebar';\nimport Onboarding from './components/Onboarding';\n\n// Project Object\ninterface Project {\n  title: string;\n  description: string;\n  status: 'In Progress' | 'Completed' | 'On Hold';\n}\n\ninterface OnboardingProps {\n  onSubmit: (name: string) => void; // Correctly typed to expect a string and return void\n}\n\nconst App = () => {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [currentProject, setCurrentProject] = useState<Project | null>(null);\n  const [editingIndex, setEditingIndex] = useState<number | null>(null);\n  const [name, setName] = useState('');\n  \n  useEffect(() => {\n    const savedProjects = localStorage.getItem('projects');\n    if (savedProjects) {\n      setProjects(JSON.parse(savedProjects));\n    }\n  }, []);\n\n  // Check if username exists\n  useEffect(() => {\n    const name = localStorage.getItem('name');\n    if (name) {\n      setName(name);\n    }\n  }, []);\n\n  // Username submission\n  const handleNameSubmit = (name: string) => {\n    setName(name); \n    // Save to localStorage\n    localStorage.setItem('name', name); \n  };\n\n  const saveProjectsToLocalStorage = (updatedProjects: Project[]) => {\n    setProjects(updatedProjects);\n    localStorage.setItem('projects', JSON.stringify(updatedProjects));\n  };\n\n  const addProject = (newProject: Project) => {\n    if (editingIndex !== null) {\n      const updatedProjects = [...projects];\n      updatedProjects[editingIndex] = newProject;\n      saveProjectsToLocalStorage(updatedProjects);\n      setEditingIndex(null);\n      setCurrentProject(null);\n    } else {\n      const updatedProjects = [...projects, newProject];\n      saveProjectsToLocalStorage(updatedProjects);\n    }\n  };\n\n  const editProject = (index: number) => {\n    setCurrentProject(projects[index]);\n    setEditingIndex(index);\n  };\n\n  const deleteProject = (index: number) => {\n    const updatedProjects = projects.filter((_, i) => i !== index);\n    saveProjectsToLocalStorage(updatedProjects);\n  };\n\n  const closeSidebar = () => {\n    setCurrentProject(null);\n  };\n\n  const saveEditedProject = (updatedProject: Project) => {\n    if (editingIndex !== null) {\n      const updatedProjects = [...projects];\n      updatedProjects[editingIndex] = updatedProject;\n      saveProjectsToLocalStorage(updatedProjects);\n      closeSidebar();\n    }\n  };\n\n  return (\n    <div className=\"bg-stone-800 text-gray-100 min-h-screen\">\n      {!name ? (\n        <Onboarding onSubmit={handleNameSubmit} />\n      ) : (\n              <div className=\"max-w-screen-sm mx-auto pt-20\">\n              <h1 className=\"text-4xl font-serif text-white mb-6 mt-10 text-center\">Good evening Jonathan</h1>\n                <ProjectForm onAddProject={addProject} project={currentProject} />\n                <ProjectList projects={projects} onEdit={editProject} onDelete={deleteProject} />\n                \n                {currentProject && (\n                  <Sidebar\n                    project={currentProject}\n                    onClose={closeSidebar}\n                    onSave={saveEditedProject}\n                  />\n                )}\n              </div>\n          )}\n          </div>\n        );\n      };\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}