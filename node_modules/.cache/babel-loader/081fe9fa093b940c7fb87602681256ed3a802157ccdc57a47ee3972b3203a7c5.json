{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan/Desktop/PortfolioFolder/project-status-dashboard/src/components/ProjectList.tsx\";\nimport { Droppable, Draggable, DragDropContext } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectList = ({\n  projects,\n  onReorder\n}) => {\n  const handleDragEnd = result => {\n    if (!result.destination) return; // Dropped outside the list\n    const reorderedProjects = [...projects];\n    const [movedProject] = reorderedProjects.splice(result.source.index, 1);\n    reorderedProjects.splice(result.destination.index, 0, movedProject);\n    onReorder(reorderedProjects); // Update the project order in the parent component\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"projectList\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        className: \"space-y-4\",\n        children: [projects.map((project, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: project.title,\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            className: \"p-4 border border-gray-200 rounded hover:shadow-lg transition-shadow duration-300\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-bold\",\n              children: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `inline-block px-2 py-1 mt-2 text-white rounded ${project.status === 'In Progress' ? 'bg-yellow-500' : project.status === 'Completed' ? 'bg-green-500' : 'bg-red-500'}`,\n              children: project.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }, this)\n        }, project.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["Droppable","Draggable","DragDropContext","jsxDEV","_jsxDEV","ProjectList","projects","onReorder","handleDragEnd","result","destination","reorderedProjects","movedProject","splice","source","index","onDragEnd","children","droppableId","provided","droppableProps","ref","innerRef","className","map","project","draggableId","title","draggableProps","dragHandleProps","fileName","_jsxFileName","lineNumber","columnNumber","description","status","placeholder","_c","$RefreshReg$"],"sources":["/Users/jonathan/Desktop/PortfolioFolder/project-status-dashboard/src/components/ProjectList.tsx"],"sourcesContent":["import { Droppable, Draggable, DragDropContext, DroppableProvided, DraggableProvided } from 'react-beautiful-dnd';\n\ninterface Project {\n  title: string;\n  description: string;\n  status: 'In Progress' | 'Completed' | 'On Hold';\n}\n\ninterface ProjectListProps {\n  projects: Project[];\n  onReorder: (reorderedProjects: Project[]) => void;\n}\n\nconst ProjectList: React.FC<ProjectListProps> = ({ projects, onReorder }) => {\n  const handleDragEnd = (result: any) => {\n    if (!result.destination) return; // Dropped outside the list\n    const reorderedProjects = [...projects];\n    const [movedProject] = reorderedProjects.splice(result.source.index, 1);\n    reorderedProjects.splice(result.destination.index, 0, movedProject);\n    onReorder(reorderedProjects); // Update the project order in the parent component\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Droppable droppableId=\"projectList\">\n        {(provided: DroppableProvided) => (\n          <ul {...provided.droppableProps} ref={provided.innerRef} className=\"space-y-4\">\n            {projects.map((project, index) => (\n              <Draggable key={project.title} draggableId={project.title} index={index}>\n                {(provided: DraggableProvided) => (\n                  <li\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    className=\"p-4 border border-gray-200 rounded hover:shadow-lg transition-shadow duration-300\"\n                  >\n                    <h3 className=\"text-lg font-bold\">{project.title}</h3>\n                    <p>{project.description}</p>\n                    <span\n                      className={`inline-block px-2 py-1 mt-2 text-white rounded ${\n                        project.status === 'In Progress' ? 'bg-yellow-500' :\n                        project.status === 'Completed' ? 'bg-green-500' :\n                        'bg-red-500'\n                      }`}\n                    >\n                      {project.status}\n                    </span>\n                  </li>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </ul>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default ProjectList;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,SAAS,EAAEC,eAAe,QAA8C,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAalH,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EAC3E,MAAMC,aAAa,GAAIC,MAAW,IAAK;IACrC,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE,OAAO,CAAC;IACjC,MAAMC,iBAAiB,GAAG,CAAC,GAAGL,QAAQ,CAAC;IACvC,MAAM,CAACM,YAAY,CAAC,GAAGD,iBAAiB,CAACE,MAAM,CAACJ,MAAM,CAACK,MAAM,CAACC,KAAK,EAAE,CAAC,CAAC;IACvEJ,iBAAiB,CAACE,MAAM,CAACJ,MAAM,CAACC,WAAW,CAACK,KAAK,EAAE,CAAC,EAAEH,YAAY,CAAC;IACnEL,SAAS,CAACI,iBAAiB,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,oBACEP,OAAA,CAACF,eAAe;IAACc,SAAS,EAAER,aAAc;IAAAS,QAAA,eACxCb,OAAA,CAACJ,SAAS;MAACkB,WAAW,EAAC,aAAa;MAAAD,QAAA,EAChCE,QAA2B,iBAC3Bf,OAAA;QAAA,GAAQe,QAAQ,CAACC,cAAc;QAAEC,GAAG,EAAEF,QAAQ,CAACG,QAAS;QAACC,SAAS,EAAC,WAAW;QAAAN,QAAA,GAC3EX,QAAQ,CAACkB,GAAG,CAAC,CAACC,OAAO,EAAEV,KAAK,kBAC3BX,OAAA,CAACH,SAAS;UAAqByB,WAAW,EAAED,OAAO,CAACE,KAAM;UAACZ,KAAK,EAAEA,KAAM;UAAAE,QAAA,EACpEE,QAA2B,iBAC3Bf,OAAA;YACEiB,GAAG,EAAEF,QAAQ,CAACG,QAAS;YAAA,GACnBH,QAAQ,CAACS,cAAc;YAAA,GACvBT,QAAQ,CAACU,eAAe;YAC5BN,SAAS,EAAC,mFAAmF;YAAAN,QAAA,gBAE7Fb,OAAA;cAAImB,SAAS,EAAC,mBAAmB;cAAAN,QAAA,EAAEQ,OAAO,CAACE;YAAK;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtD7B,OAAA;cAAAa,QAAA,EAAIQ,OAAO,CAACS;YAAW;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5B7B,OAAA;cACEmB,SAAS,EAAE,kDACTE,OAAO,CAACU,MAAM,KAAK,aAAa,GAAG,eAAe,GAClDV,OAAO,CAACU,MAAM,KAAK,WAAW,GAAG,cAAc,GAC/C,YAAY,EACX;cAAAlB,QAAA,EAEFQ,OAAO,CAACU;YAAM;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QACL,GApBaR,OAAO,CAACE,KAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqBlB,CACZ,CAAC,EACDd,QAAQ,CAACiB,WAAW;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEtB,CAAC;AAACI,EAAA,GA5CIhC,WAAuC;AA8C7C,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}