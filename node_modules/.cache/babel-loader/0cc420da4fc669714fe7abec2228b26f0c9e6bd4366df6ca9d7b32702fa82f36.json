{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan/Desktop/PortfolioFolder/project-status-dashboard/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProjectForm from './components/ProjectForm';\nimport ProjectList from './components/ProjectList';\n\n// Define project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [currentProject, setCurrentProject] = useState(null); // For editing\n  const [editingIndex, setEditingIndex] = useState(null); // For tracking which project is being edited\n\n  useEffect(() => {\n    const savedProjects = localStorage.getItem('projects');\n    if (savedProjects) {\n      setProjects(JSON.parse(savedProjects));\n    }\n  }, []);\n  const saveProjectsToLocalStorage = updatedProjects => {\n    setProjects(updatedProjects);\n    localStorage.setItem('projects', JSON.stringify(updatedProjects));\n  };\n  const addProject = newProject => {\n    if (editingIndex !== null) {\n      // Edit existing project\n      const updatedProjects = [...projects];\n      updatedProjects[editingIndex] = newProject;\n      saveProjectsToLocalStorage(updatedProjects);\n      setEditingIndex(null);\n      setCurrentProject(null); // Clear editing state\n    } else {\n      // Add new project\n      const updatedProjects = [...projects, newProject];\n      saveProjectsToLocalStorage(updatedProjects);\n    }\n  };\n  const editProject = index => {\n    setCurrentProject(projects[index]); // Load project into form for editing\n    setEditingIndex(index); // Track which project is being edited\n  };\n  const deleteProject = index => {\n    const updatedProjects = projects.filter((_, i) => i !== index);\n    saveProjectsToLocalStorage(updatedProjects);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Project Status Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectForm, {\n      onAddProject: addProject,\n      project: currentProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n      projects: projects,\n      onEdit: editProject,\n      onDelete: deleteProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WuTepyKhbEAmJRTFxMNlVJl/WYI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ProjectForm","ProjectList","jsxDEV","_jsxDEV","App","_s","projects","setProjects","currentProject","setCurrentProject","editingIndex","setEditingIndex","savedProjects","localStorage","getItem","JSON","parse","saveProjectsToLocalStorage","updatedProjects","setItem","stringify","addProject","newProject","editProject","index","deleteProject","filter","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddProject","project","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/Users/jonathan/Desktop/PortfolioFolder/project-status-dashboard/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProjectForm from './components/ProjectForm';\nimport ProjectList from './components/ProjectList';\n\n// Define project structure\ninterface Project {\n  title: string;\n  description: string;\n  status: 'In Progress' | 'Completed' | 'On Hold';\n}\n\nconst App = () => {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [currentProject, setCurrentProject] = useState<Project | null>(null); // For editing\n  const [editingIndex, setEditingIndex] = useState<number | null>(null); // For tracking which project is being edited\n\n  useEffect(() => {\n    const savedProjects = localStorage.getItem('projects');\n    if (savedProjects) {\n      setProjects(JSON.parse(savedProjects));\n    }\n  }, []);\n\n  const saveProjectsToLocalStorage = (updatedProjects: Project[]) => {\n    setProjects(updatedProjects);\n    localStorage.setItem('projects', JSON.stringify(updatedProjects));\n  };\n\n  const addProject = (newProject: Project) => {\n    if (editingIndex !== null) {\n      // Edit existing project\n      const updatedProjects = [...projects];\n      updatedProjects[editingIndex] = newProject;\n      saveProjectsToLocalStorage(updatedProjects);\n      setEditingIndex(null);\n      setCurrentProject(null); // Clear editing state\n    } else {\n      // Add new project\n      const updatedProjects = [...projects, newProject];\n      saveProjectsToLocalStorage(updatedProjects);\n    }\n  };\n\n  const editProject = (index: number) => {\n    setCurrentProject(projects[index]); // Load project into form for editing\n    setEditingIndex(index); // Track which project is being edited\n  };\n\n  const deleteProject = (index: number) => {\n    const updatedProjects = projects.filter((_, i) => i !== index);\n    saveProjectsToLocalStorage(updatedProjects);\n  };\n\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">Project Status Dashboard</h1>\n      <ProjectForm onAddProject={addProject} project={currentProject} />\n      <ProjectList projects={projects} onEdit={editProject} onDelete={deleteProject} />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}